include(CheckIPOSupported)
check_ipo_supported(RESULT supported OUTPUT error)
set(CMAKE_CXX_FLAGS_DEBUG )
set(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS} -Ofast -fno-exceptions -fno-unwind-tables -fno-asynchronous-unwind-tables -fno-rtti")add_executable(main1_5_1 define_a_functional_object.cpp)
add_executable(main1_5_2 lambda_expression.cpp)
add_executable(main1_5_3 std::functional.cpp)
target_include_directories(main1_5_1 PUBLIC /home/wwj/source-code/fast_io/include/)
target_include_directories(main1_5_2 PUBLIC /home/wwj/source-code/fast_io/include/)
target_include_directories(main1_5_3 PUBLIC /home/wwj/source-code/fast_io/include/)

if(supported)
    message(STATUS "IPO/LTO enabled")
    set_property(TARGET main1_5_1 PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
    set_property(TARGET main1_5_2 PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
    set_property(TARGET main1_5_2 PROPERTY INTERPROCEDURAL_OPTIMIZATION TRUE)
else()
    message(STATUS "IPO/LTO not supported: <${error}>")
endif()

